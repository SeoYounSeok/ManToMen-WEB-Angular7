# See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
/dist
/tmp
/out-tsc

# dependencies
/node_modules

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
.settings/
*.sublime-workspace

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# misc
/.sass-cache
/connect.lock
/coverage
/libpeerconnection.log
npm-debug.log
yarn-error.log
testem.log
/typings

# System Files
.DS_Store
Thumbs.db


import { Component, OnInit }        from '@angular/core';
import { Router, NavigationExtras } from '@angular/router';
import { RauthService }      from '../rauth.service';
import {Http, Response, RequestOptions, Headers} from '@angular/http';
import { CheckType } from '@angular/core/src/view';
@Component({

  selector: 'app-register',
  templateUrl: './register.component.html',
  styleUrls: ['./register.component.css'],
  
})
export class RegisterComponent implements OnInit {
  message: string;

  constructor(public Rauth: RauthService, public router: Router) {
   }


  ngOnInit() {
  
  }
  //register(gender:string){
  // console.log(gender);
  //  let json = JSON.stringify(gender);
  //}
 

  RegisterUser(event)
  {
    
    event.preventDefault( )
    function getRadioValue(theRadioGroup) {
      for (let i = 0, l = theRadioGroup.length; i < l; i++) {
        if (theRadioGroup[i].checked) {
          return theRadioGroup[i].value;
        }
      }
    }
    function getCheckBox(theCheckBox) {
      var check ='';
      for (let i = 0, l = theCheckBox.length; i < l; i++) {
        if (theCheckBox[i].checked) {
          
          check += theCheckBox[i].value +"//";      
                
        }
      }
      return check;
    }
    const checkbox = document.getElementsByName('userCategory')
    const userCategory = getCheckBox(checkbox)
    const radioButton= document.getElementsByName('test')
    const userGender = getRadioValue(radioButton)
    const target = event.target
    const userID = target.querySelector('#userID').value
    const userPassword = target.querySelector('#userPassword').value
    const userEmail = target.querySelector('#userEmail').value
    const userName = target.querySelector('#userName').value
    const userAge = target.querySelector('#userAge').value
    const userIdentity = "Tuti"
    const userParticipateClass = null
    const userOperateClass = null
    this.Rauth.getRegister(userID, userPassword, userEmail, userName, userAge, userGender, userCategory, userIdentity, userParticipateClass, userOperateClass)
    console.log(userID, userPassword, userEmail, userName, userAge, userGender, userCategory, userIdentity, userParticipateClass, userOperateClass)
  }
}
